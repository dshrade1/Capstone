
# load data sets
load("/project/msca/capstone3/df1.RData") #BOX-COX-transformed
load("/project/msca/capstone3/df_diag_all_num.RData") #UNTRANSFORMED(train_data,test_data)

# create model matrices for TRANSFORMED data
x1_train <- model.matrix(y2_charges~.,df1_train[,-1])
x1_test <- model.matrix(y2_charges~.,df1_test[,-1])
y1_train <- df1_train$y2_charges
y1_test <- df1_test$y2_charges


# run ridge model
library(glmnet)
grid <- 10^seq(3,-3,length=10)
ptm <- proc.time()
ridge1.mod <- glmnet(x1_train,y1_train,alpha=0,lambda=grid) #28s runtime
proc.time() - ptm 
ptm <- proc.time()
set.seed(10)
cv.out1 <- cv.glmnet(x1_train,y1_train,lambda=grid,alpha=0) #7min runtime
plot(cv.out1)
proc.time() - ptm 
save(cv.out1,file="/project/msca/capstone3/ridgeCV1.RData")
ptm <- proc.time()
ridge1.pred <- predict(ridge1.mod,s=cv.out1$lambda.min,newx=x1_test)
save(ridge1.pred,file="/project/msca/capstone3/ridge1.pred.RData")
proc.time() - ptm 

# Lasso
ptm <- proc.time()
lasso1.mod <- glmnet(x1_train,y1_train,alpha=1,lambda=grid) 
proc.time() - ptm 
ptm <- proc.time()
cv1.lasso  <- cv.glmnet(x1_train,y1_train,lambda=grid,alpha=1) #5.8-min runtime
proc.time() - ptm 
save(cv1.lasso,file="/project/msca/capstone3/cv1.lasso.RData") 
plot(cv1.lasso)
lasso1.pred <- predict(lasso1.mod,s=cv1.lasso$lambda.min, newx=x1_test) 
save(lasso1.pred,file="/project/msca/capstone3/lasso1.pred.RData")

# investigate the lasso coefficients that were NOT turned to 0.
lasso_coeffs <- predict(lasso1.mod,s=cv1.lasso$lambda.min,type="coefficients")
length(which(lasso_coeffs!=0)) # of the >4000 variables, the coefficients of only 264 variables were not shrunk to 0.
dimnames(lasso_coeffs)[[1]][which(lasso_coeffs!=0)] # these are the variables that were not shrunk to 0 by lasso.
# we see that of thw >4000 ICD-9 diagnosis codes, only 230 were chosen to be included in the cross-validated lasso model.
# compare the distributions of the data
par(mfrow=c(1,3))
hist(lasso1.pred,breaks=20)
hist(y1_test,breaks=20)
hist(ridge1.pred,breaks=20)
par(mfrow=c(1,1))


# compare to LM
#lin.mod <- lm(y1_train~x1_train) #started at 1:34 P.M.
#lm.pred <- predict(lin.mod,x1_test)
lm.pred <- predict(ridge.mod,s=0,exact=T,x1_test) #setting s=0 makes it linear



# Calculate MSEs of transformed data
ridge1.mse <- mean((ridge1.pred-y1_test)^2)
lasso1.mse <- mean((lasso1.pred-y1_test)^2)
lm.mse <- mean((lm.pred-y1_test)^2)

ridge1.mse 
lasso1.mse
normalized_model_comparison <- data.frame(cbind(model=c("lasso","ridge","lm"),MSE=c(lasso1.mse,ridge1.mse,lm.mse)))
normalized_model_comparison

# TRANSFORM predicted cost values back to regular cost values.
lam <- 0.2 #value chosen by Box-Cox transformation. See last few lines of CreateTransformedData on GitHub.
ridge1.pred_untransformed <- ridge1.pred^(1/lam) #undoes the box-cox transform
lasso1.pred_untransformed <- lasso1.pred^(1/lam) # undoes the box-cox transform

# Calculate MSE of actual cost predictions
ridge1.mse_untransformed <- mean((ridge1.pred_untransformed-test_data$y2_charges)^2)
lasso1.mse_untransformed <- mean((lasso1.pred_untransformed-test_data$y2_charges)^2)

detransformed_model_comparison <- data.frame(cbind(model=c("lasso","ridge"),MSE=c(lasso1.mse_untransformed,ridge1.mse_untransformed)))
detransformed_model_comparison
